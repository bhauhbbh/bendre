================================================================
REPOPACK OUTPUT FILE
================================================================

This file was generated by Repopack on: 2024-10-06T09:18:22.208Z

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This header section
2. Multiple file entries, each consisting of:
   a. A separator line (================)
   b. The file path (File: path/to/file)
   c. Another separator line
   d. The full contents of the file
   e. A blank line

Usage Guidelines:
-----------------
1. This file should be treated as read-only. Any changes should be made to the
   original repository files, not this packed version.
2. When processing this file, use the separators and "File:" markers to
   distinguish between different files in the repository.
3. Be aware that this file may contain sensitive information. Handle it with
   the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation.


For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Files
================================================================

================
File: app.vue
================
<template>
  <div>
    <NuxtPage />
  </div>
</template>

================
File: components\BigMenu.vue
================
<!-- components/BigMenu.vue -->
<template>
    <nav class="relative bg-white border-b-2 border-gray-200 text-gray-900 font-nunito hidden md:block">
      <div class="container mx-auto">
        <ul class="flex justify-center">
          <li v-for="item in topLevelItems" :key="item.name" class="hoverable group">
            <a href="#" class="relative block py-6 px-4 lg:p-6 text-lg lg:text-base font-semibold hover:bg-gray-100 flex items-center">
              {{ item.name }}
              <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M19 9l-7 7-7-7"></path>
              </svg>
            </a>
            <div class="p-6 mega-menu mb-16 sm:mb-0 shadow-xl bg-white">
              <div class="container mx-auto">
                <div class="flex justify-center">
                  <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-8 max-w-7xl">
                    <div v-for="(column, index) in item.submenu" :key="index" class="px-4">
                      <h3 class="font-bold text-lg mb-3 text-black uppercase">{{ column.heading }}</h3>
                      <ul class="text-left">
                        <li v-for="subItem in column.items" :key="subItem.name" class="mb-2">
                          <a :href="subItem.path" class="text-custom-maroon hover:underline text-lg font-normal">{{ subItem.name }}</a>
                        </li>
                      </ul>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </li>
        </ul>
      </div>
    </nav>
  </template>
  <script setup>
  import { topLevelItems } from './menuData.js';
  </script>
  
 
<style scoped>
nav {
  position: relative;
  z-index: 1000;
}

.mega-menu {
  display: none;
  left: 0;
  position: absolute;
  width: 100%;
}

.hoverable {
  position: static;
}

.hoverable:hover .mega-menu {
  display: block;
}

.mega-menu {
  transition: all 0.15s ease-in-out;
}
</style>

================
File: components\Header.vue
================
<!-- components/Header.vue -->
<template>
  <header class="shadow-md relative">
    <!-- Top row -->
    <div class="bg-custom-maroon text-white">
      <div class="container mx-auto px-4 py-4 flex justify-between items-center">
        <h1 class="text-2xl font-bold">Bendre PU College</h1>
        <button @click="toggleMobileMenu" class="md:hidden text-white">
          <svg v-if="!isMobileMenuOpen" class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"></path>
          </svg>
          <svg v-else class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
    </div>
    
    <!-- Big Menu (hidden on mobile) -->
    <div class="hidden md:block">
      <BigMenu />
    </div>

    <!-- Mobile menu backdrop -->
    <div v-if="isMobileMenuOpen" class="fixed inset-0 bg-black bg-opacity-50 z-40" @click="closeMobileMenu"></div>

    <!-- Mobile menu (hidden on larger screens) -->
    <Transition name="slide-fade">
      <MobileMenu v-if="isMobileMenuOpen" @close-menu="closeMobileMenu" class="fixed top-0 right-0 h-full w-64 bg-white z-50" />
    </Transition>
  </header>
</template>

<script setup>
import { ref } from 'vue'
import BigMenu from './BigMenu.vue'
import MobileMenu from './MobileMenu.vue'

const isMobileMenuOpen = ref(false)

const toggleMobileMenu = () => {
  isMobileMenuOpen.value = !isMobileMenuOpen.value
}

const closeMobileMenu = () => {
  isMobileMenuOpen.value = false
}
</script>

<style scoped>
.slide-fade-enter-active,
.slide-fade-leave-active {
  transition: all 0.3s ease;
}

.slide-fade-enter-from,
.slide-fade-leave-to {
  transform: translateX(100%);
  opacity: 0;
}
</style>

================
File: components\Hero.vue
================
<!-- components/Hero.vue -->
<template>
    <section class="hero relative h-[500px] bg-cover bg-center" :style="{   backgroundImage: `url(${heroImage})`,
      backgroundPosition: 'center bottom' }">
      <div class="absolute inset-0 bg-black bg-opacity-50"></div>
      <div class="container mx-auto px-4 h-full flex items-center justify-center relative z-10">
        <div class="text-center text-white">
          <h2 class="text-4xl font-bold mb-4">Welcome to Bendre PU College</h2>
          <p class="text-xl mb-8">Empowering minds, shaping futures</p>
          <NuxtLink to="/admissions" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-6 rounded-full text-lg transition duration-300">
            Apply Now
          </NuxtLink>
        </div>
      </div>
    </section>
  </template>
  
  <script setup>
  const heroImage = '/bendre.jpg' // Replace with your actual hero image
  </script>

================
File: components\menuData.js
================
// components/menuData.js
export const topLevelItems = [
    {
        name: 'ACADEMICS & ADMISSIONS',
        submenu: [
          {
            heading: 'ACADEMICS',
            items: [
              { name: 'Programs', path: '#' },
              { name: 'Departments', path: '#' },
              { name: 'Academic Calendar', path: '#' },
            ]
          },
          {
            heading: 'ADMISSIONS',
            items: [
              { name: 'Apply Now', path: '#' },
              { name: 'Visit Campus', path: '#' },
              { name: 'Tuition & Fees', path: '#' },
            ]
          }
        ]
      },
      {
        name: 'CAMPUS',
        submenu: [
          {
            heading: 'CAMPUS LIFE',
            items: [
              { name: 'Housing', path: '#' },
              { name: 'Dining', path: '#' },
              { name: 'Student Organizations', path: '#' },
            ]
          },
          {
            heading: 'FACILITIES',
            items: [
              { name: 'Libraries', path: '#' },
              { name: 'Sports Center', path: '#' },
              { name: 'Student Center', path: '#' },
            ]
          }
        ]
      },
      {
        name: 'RESOURCES',
        submenu: [
          {
            heading: 'TECHNOLOGY',
            items: [
              { name: 'Media Hub', path: '#' },
              { name: 'Tech Services', path: '#' },
            ]
          },
          {
            heading: 'REGISTRATION',
            items: [
              { name: 'Office of the Registrar', path: '#' },
              { name: 'Register for Classes', path: '#' },
            ]
          },
          {
            heading: 'ACCOUNTS',
            items: [
              { name: 'Student Accounts', path: '#' },
              { name: 'Financial Aid', path: '#' },
            ]
          },
          {
            heading: 'HEALTH & SAFETY',
            items: [
              { name: 'Wellness', path: '#' },
              { name: 'Campus Safety', path: '#' },
            ]
          },
          {
            heading: 'ADDITIONAL RESOURCES',
            items: [
              { name: 'Resources for Parents', path: '#' },
              { name: 'All Student Resources', path: '#' },
              { name: 'Internal Event Brand Guide', path: '#' },
            ]
          },
        ]
      },
      {
        name: 'ABILITIES',
        submenu: [
          {
            heading: 'CAREER SERVICES',
            items: [
              { name: 'Career Counseling', path: '#' },
              { name: 'Job Search', path: '#' },
              { name: 'Internships', path: '#' },
            ]
          },
          {
            heading: 'SKILLS DEVELOPMENT',
            items: [
              { name: 'Workshops', path: '#' },
              { name: 'Online Courses', path: '#' },
              { name: 'Mentorship Programs', path: '#' },
            ]
          }
        ]
      },
      {
        name: 'IGNITERS',
        submenu: [
          {
            heading: 'RESEARCH',
            items: [
              { name: 'Research Centers', path: '#' },
              { name: 'Faculty Research', path: '#' },
              { name: 'Student Research', path: '#' },
            ]
          },
          {
            heading: 'INNOVATION',
            items: [
              { name: 'Entrepreneurship', path: '#' },
              { name: 'Incubator Programs', path: '#' },
              { name: 'Partnerships', path: '#' },
            ]
          }
        ]
      }
    // ... (include the rest of the menu items here)
  ];

================
File: components\MobileMenu.vue
================
<!-- components/MobileMenu.vue -->
<template>
    <nav class="bg-white h-full overflow-y-auto">
      <div class="flex justify-between items-center p-4 border-b border-gray-200">
        <h2 class="text-xl font-bold text-custom-maroon">Menu</h2>
        <button @click="$emit('close-menu')" class="text-gray-500 hover:text-gray-700">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      <ul class="py-2">
        <li v-for="item in topLevelItems" :key="item.name" class="border-b border-gray-200 last:border-b-0">
          <div @click="toggleSubmenu(item)" class="flex justify-between items-center px-4 py-2 cursor-pointer">
            <span class="text-lg font-semibold">{{ item.name }}</span>
            <svg class="w-4 h-4 ml-1 transform transition-transform" :class="{ 'rotate-180': openSubmenus.includes(item.name) }" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </div>
          <div v-show="openSubmenus.includes(item.name)" class="bg-gray-100">
            <div v-for="(column, index) in item.submenu" :key="index" class="px-6 py-2">
              <h3 class="font-bold text-sm mb-2 text-gray-600 uppercase">{{ column.heading }}</h3>
              <ul>
                <li v-for="subItem in column.items" :key="subItem.name" class="mb-2">
                  <a :href="subItem.path" class="text-custom-maroon hover:underline text-base font-normal">{{ subItem.name }}</a>
                </li>
              </ul>
            </div>
          </div>
        </li>
      </ul>
    </nav>
  </template>
  
  <script setup>
import { ref } from 'vue'
import { topLevelItems } from './menuData.js'

const openSubmenus = ref([])

const toggleSubmenu = (item) => {
  const index = openSubmenus.value.indexOf(item.name)
  if (index === -1) {
    openSubmenus.value.push(item.name)
  } else {
    openSubmenus.value.splice(index, 1)
  }
}

defineEmits(['close-menu'])
</script>

================
File: components\NewsSection.vue
================
<!-- components/NewsSection.vue -->
<template>
    <section class="bg-white py-12">
      <div class="container mx-auto px-4">
        <h2 class="text-3xl font-bold mb-8 text-center">Latest News and Events</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          <div v-for="item in newsItems" :key="item.id" class="bg-gray-100 rounded-lg overflow-hidden">
            <img :src="item.image" :alt="item.title" class="w-full h-48 object-cover" />
            <div class="p-4">
              <h3 class="text-lg font-semibold mb-2">{{ item.title }}</h3>
              <p class="text-gray-600 text-sm mb-4">{{ item.excerpt }}</p>
              <NuxtLink :to="item.path" class="text-blue-600 hover:underline text-sm">Read More</NuxtLink>
            </div>
          </div>
        </div>
      </div>
    </section>
  </template>
  
  <script setup>
  import { useNewsStore } from '~/store/index'
  
  const newsStore = useNewsStore()
  const newsItems = newsStore.getLatestNews
  </script>

================
File: components\QuickLinks.vue
================
<!-- components/QuickLinks.vue -->
<template>
    <section class="bg-gray-100 py-12">
      <div class="container mx-auto px-4">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          <div v-for="link in quickLinks" :key="link.title" class="bg-white p-4 rounded-lg">
            <div class="text-blue-600 mb-4">
              <component :is="link.icon" class="w-8 h-8" />
            </div>
            <h3 class="text-lg font-semibold mb-2">{{ link.title }}</h3>
            <p class="text-gray-600 text-sm mb-4">{{ link.description }}</p>
            <NuxtLink :to="link.path" class="text-blue-600 hover:underline text-sm">Learn More</NuxtLink>
          </div>
        </div>
      </div>
    </section>
  </template>
  
  <script setup>
  import { UserGroupIcon, AcademicCapIcon, CalendarIcon, MapIcon } from '@heroicons/vue/24/outline'
  
  const quickLinks = [
    {
      title: 'Future Students',
      description: 'Discover opportunities for your academic journey at Bendre PU College.',
      icon: UserGroupIcon,
      path: '/admissions',
    },
    {
      title: 'Academic Programs',
      description: 'Explore our diverse range of programs and courses.',
      icon: AcademicCapIcon,
      path: '/academics',
    },
    {
      title: 'Events & Calendar',
      description: 'Stay updated with college events, important dates, and activities.',
      icon: CalendarIcon,
      path: '/events',
    },
    {
      title: 'Campus Tour',
      description: 'Take a virtual tour of our state-of-the-art facilities.',
      icon: MapIcon,
      path: '/campus-tour',
    },
  ]
  </script>

================
File: nuxt.config.ts
================
// https://nuxt.com/docs/api/configuration/nuxt-config
export default defineNuxtConfig({
  compatibilityDate: '2024-04-03',
  devtools: { enabled: true },
  modules: ['@nuxtjs/tailwindcss','@pinia/nuxt'],
  app: {
    head: {
      link: [
        {
          rel: 'stylesheet',
          href: 'https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700&display=swap'
        }
      ]
    }
  }
})

================
File: package.json
================
{
  "name": "nuxt-app",
  "private": true,
  "type": "module",
  "scripts": {
    "build": "nuxt build",
    "dev": "nuxt dev",
    "generate": "nuxt generate",
    "preview": "nuxt preview",
    "postinstall": "nuxt prepare"
  },
  "dependencies": {
    "@heroicons/vue": "^2.1.5",
    "@nuxtjs/tailwindcss": "^6.12.1",
    "@pinia/nuxt": "^0.5.5",
    "nuxt": "^3.13.0",
    "pinia": "^2.2.4",
    "vue": "latest",
    "vue-router": "latest"
  }
}

================
File: pages\index.vue
================
<!-- pages/index.vue -->
<template>
  <div class="college-homepage">
    <Header />
    <Hero />
    <QuickLinks />
    <NewsSection />
  </div>
</template>

<script setup>
import Header from '~/components/Header.vue'
import Hero from '~/components/Hero.vue'
import QuickLinks from '~/components/QuickLinks.vue'
import NewsSection from '~/components/NewsSection.vue'
</script>

<style scoped>
.college-homepage {
  font-family: Arial, sans-serif;
}
</style>

================
File: README.md
================
# Nuxt 3 Minimal Starter

Look at the [Nuxt 3 documentation](https://nuxt.com/docs/getting-started/introduction) to learn more.

## Setup

Make sure to install the dependencies:

```bash
# npm
npm install

# pnpm
pnpm install

# yarn
yarn install

# bun
bun install
```

## Development Server

Start the development server on `http://localhost:3000`:

```bash
# npm
npm run dev

# pnpm
pnpm run dev

# yarn
yarn dev

# bun
bun run dev
```

## Production

Build the application for production:

```bash
# npm
npm run build

# pnpm
pnpm run build

# yarn
yarn build

# bun
bun run build
```

Locally preview production build:

```bash
# npm
npm run preview

# pnpm
pnpm run preview

# yarn
yarn preview

# bun
bun run preview
```

Check out the [deployment documentation](https://nuxt.com/docs/getting-started/deployment) for more information.

================
File: server\tsconfig.json
================
{
  "extends": "../.nuxt/tsconfig.server.json"
}

================
File: store\index.js
================
// store/news.js
import { defineStore } from 'pinia'

export const useNewsStore = defineStore('news', {
  state: () => ({
    news: [
      {
        id: 1,
        title: 'New Science Lab Inauguration',
        excerpt: 'State-of-the-art science lab opens its doors to students.',
        image: '/image.png',
        path: '/news/new-science-lab',
      },
      {
        id: 2,
        title: 'Annual Sports Meet',
        excerpt: 'Join us for the exciting annual sports meet next month.',
        image: '/image.png',
        path: '/news/annual-sports-meet',
      },
      {
        id: 3,
        title: 'Cultural Fest 2024',
        excerpt: 'Get ready for the biggest cultural event of the year.',
        image: '/image.png',
        path: '/news/cultural-fest-2024',
      },
    ],
  }),
  getters: {
    getLatestNews: (state) => state.news.slice(0, 3),
  },
})

================
File: tailwind.config.js
================
/** @type {import('tailwindcss').Config} */
export default {
  content: [],
  theme: {
    extend: {
      fontFamily: {
        sans: ['Nunito Sans', 'sans-serif'],
        nunito: ['Nunito Sans', 'sans-serif'],
      },
      colors: {
        'custom-maroon': '#881125',
        'custom-maroon-dark': '#6A0D1E',
      },
    },
  },
  plugins: [],
}

================
File: tsconfig.json
================
{
  // https://nuxt.com/docs/guide/concepts/typescript
  "extends": "./.nuxt/tsconfig.json"
}
